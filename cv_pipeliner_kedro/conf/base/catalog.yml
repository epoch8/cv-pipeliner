# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html
#
# This is a data set used by the "Hello World" example pipeline provided with the project
# template. Please feel free to remove it once you remove the example pipeline.

images_data_train:
  type: cv_pipeliner_kedro.extras.datasets.image_dataset.ImageDataSet
  annotation_type: 'brickit'
  images_dir: data/01_raw/train/
  annotation_filepath: data/01_raw/train/annotations.json

images_data_val:
  type: cv_pipeliner_kedro.extras.datasets.image_dataset.ImageDataSet
  annotation_type: 'brickit'
  images_dir: data/01_raw/val/
  annotation_filepath: data/01_raw/val/annotations.json

default_cv_pipeliner_app_config:
  type: kedro.extras.datasets.yaml.YAMLDataSet
  filepath: data/01_raw/default_cv_pipeliner_app_config.yaml

detection_model_definition_yaml:
  type: kedro.extras.datasets.yaml.YAMLDataSet
  filepath: data/06_models/detection/detection_model.yaml

classification_model_definition_yaml:
  type: kedro.extras.datasets.yaml.YAMLDataSet
  filepath: data/06_models/classification/classification_model.yaml

detection_model_spec:
  type: cv_pipeliner_kedro.extras.datasets.dataclass_dataset.DataClassDataSet
  data_class: cv_pipeliner.inference_models.detection.object_detection_api.ObjectDetectionAPI_ModelSpec
  filepath: data/06_models/detection/detection_model_spec.json

classification_model_spec:
  type: cv_pipeliner_kedro.extras.datasets.dataclass_dataset.DataClassDataSet
  data_class: cv_pipeliner.inference_models.classification.tensorflow.TensorFlow_ClassificationModelSpec
  filepath: data/06_models/classification/classification_model_spec.json

pipeline_model_spec:
  type: cv_pipeliner_kedro.extras.datasets.dataclass_dataset.DataClassDataSet
  data_class: cv_pipeliner.inference_models.pipeline.PipelineModelSpec
  filepath: data/06_models/pipeline/pipeline_model_spec.json

detection_model:
  type: cv_pipeliner_kedro.extras.datasets.inference_model_dataset.InferenceModel_Dataset
  model_spec_data_class: cv_pipeliner.inference_models.detection.object_detection_api.ObjectDetectionAPI_ModelSpec
  model_spec_filepath: data/06_models/detection/detection_model_spec.json

classification_model:
  type: cv_pipeliner_kedro.extras.datasets.inference_model_dataset.InferenceModel_Dataset
  model_spec_data_class: cv_pipeliner.inference_models.classification.tensorflow.TensorFlow_ClassificationModelSpec
  model_spec_filepath: data/06_models/classification/classification_model_spec.json

pipeline_model:
  type: cv_pipeliner_kedro.extras.datasets.inference_model_dataset.InferenceModel_Dataset
  model_spec_data_class: cv_pipeliner.inference_models.pipeline.PipelineModelSpec
  model_spec_filepath: data/06_models/pipeline/pipeline_model_spec.json

detection_inferencer:
  type: cv_pipeliner_kedro.extras.datasets.inferencer_dataset.Inferencer_Dataset
  model_spec_data_class: cv_pipeliner.inference_models.detection.object_detection_api.ObjectDetectionAPI_ModelSpec
  model_spec_filepath: data/06_models/detection/detection_model_spec.json
  infrencer: cv_pipeliner.inferencers.detection.DetectionInferencer

classification_inferencer:
  type: cv_pipeliner_kedro.extras.datasets.inferencer_dataset.Inferencer_Dataset
  model_spec_data_class: cv_pipeliner.inference_models.classification.tensorflow.TensorFlow_ClassificationModelSpec
  model_spec_filepath: data/06_models/classification/classification_model_spec.json
  infrencer: cv_pipeliner.inferencers.classification.ClassificationInferencer

pipeline_inferencer:
  type: cv_pipeliner_kedro.extras.datasets.inferencer_dataset.Inferencer_Dataset
  model_spec_data_class: cv_pipeliner.inference_models.pipeline.PipelineModelSpec
  model_spec_filepath: data/06_models/pipeline/pipeline_model_spec.json
  infrencer: cv_pipeliner.inferencers.pipeline.PipelineInferencer

pred_detection_images_data_val:
  type: cv_pipeliner_kedro.extras.datasets.image_dataset.ImageDataSet
  annotation_type: 'brickit'
  images_dir: data/01_raw/val/
  annotation_filepath: data/07_model_output/detection/val/annotations.json

raw_pred_detection_images_data_val:
  type: cv_pipeliner_kedro.extras.datasets.image_dataset.ImageDataSet
  annotation_type: 'brickit'
  images_dir: data/01_raw/val/
  annotation_filepath: data/07_model_output/detection/val/raw_annotations.json

pred_pipeline_images_data_val:
  type: cv_pipeliner_kedro.extras.datasets.image_dataset.ImageDataSet
  annotation_type: 'brickit'
  images_dir: data/01_raw/val/
  annotation_filepath: data/07_model_output/pipeline/val/annotations.json

df_detection_metrics_on_val:
  type: kedro.extras.datasets.pandas.CSVDataSet
  filepath: data/08_reporting/detection/val/df_detection_metrics.csv

df_classification_metrics_on_val:
  type: kedro.extras.datasets.pandas.CSVDataSet
  filepath: data/08_reporting/pipeline/val/df_classification_metrics.csv

df_pipeline_metrics_on_val:
  type: kedro.extras.datasets.pandas.CSVDataSet
  filepath: data/08_reporting/pipeline/val/df_detection_metrics.csv